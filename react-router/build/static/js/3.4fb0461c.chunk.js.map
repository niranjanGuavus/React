{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQoutes.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setEntering","when","message","location","onFocus","evt","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQoutes","history","useHistory","data","console","log","push"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EApDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQC,KAAMF,EAAYG,QAAS,SAACC,GAAD,MAAc,8DACjD,cAAC,EAAD,UACE,uBACEC,QATR,SAAwBC,GACtBL,GAAY,IASNV,UAAWC,IAAQe,KACnBC,SAtBR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAIzCvB,EAAMyB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAW5C,UAKGxB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK7B,OAEtC,sBAAKL,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK3B,OAEpC,qBAAKP,UAAWC,IAAQmC,QAAxB,SACE,wBAAQC,QAAS,kBAAM3B,GAAY,IAAOV,UAAU,MAApD,kCCpCGsC,UAZG,WACd,IAAMC,EAASC,cAMf,OACG,cAAC,EAAD,CAAWhB,WANU,SAACiB,GACrBC,QAAQC,IAAIF,GACZF,EAAQK,KAAK","file":"static/js/3.4fb0461c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function onFocusHandler(evt) {\n    setEntering(true);\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave ? your data will be lost?'} />\n      <Card>\n        <form\n          onFocus={onFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={() => setEntering(false)}className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\n\nconst NewQoutes = ()=> {\n    const history =useHistory();\n    const addQouteHandler = (data) => {\n        console.log(data);\n        history.push('/qoutes');\n    };\n\n    return (\n       <QuoteForm onAddQuote={addQouteHandler}/>\n    );\n\n};\nexport default NewQoutes;"],"sourceRoot":""}